{"ast":null,"code":"import _classCallCheck from \"/Users/keno/Projects/mario/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/keno/Projects/mario/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar PlayerStates = {\n  STAND: \"stand\",\n  RUN: \"run\",\n  JUMP: \"jump\"\n};\nvar PlayerFrames = {\n  STAND: {\n    height: 32,\n    width: 32,\n    offsetX: 160,\n    offsetY: 68,\n    count: 1\n  },\n  RUN: {\n    height: 32,\n    width: 32,\n    offsetX: 194,\n    offsetY: 68,\n    count: 3\n  },\n  JUMP: {\n    height: 32,\n    width: 32,\n    offsetX: 330,\n    offsetY: 68,\n    count: 1\n  }\n};\nvar PlayerDirection = {\n  LEFT: 'left',\n  RIGHT: 'right'\n};\nvar SHEET_GAP = 2;\n\nvar Player =\n/*#__PURE__*/\nfunction () {\n  function Player(context, sheet) {\n    _classCallCheck(this, Player);\n\n    this.imgCache = {};\n    this.context = context;\n    this.sheet = sheet;\n    this.state = PlayerStates.RUN;\n    this.direction = PlayerDirection.RIGHT;\n    this.frameIndex = 0;\n    this.tickCount = 0;\n    this.ticksPerFrame = 4;\n    this.buffer = document.createElement('canvas');\n    this.bufferctx = this.buffer.getContext('2d'); // TODO: generate all images in cache\n  }\n\n  _createClass(Player, [{\n    key: \"setPlayerState\",\n    value: function setPlayerState(state) {\n      this.state = state;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var frameInfo = this.getFrameInfo();\n      this.tickCount++;\n\n      if (this.tickCount > this.ticksPerFrame) {\n        this.tickCount = 0;\n        this.frameIndex++;\n        this.frameIndex = this.frameIndex < frameInfo.count ? this.frameIndex : 0;\n      }\n    }\n  }, {\n    key: \"getFrameInfo\",\n    value: function getFrameInfo() {\n      var frame = PlayerFrames.STAND;\n\n      if (this.state === PlayerStates.STAND) {\n        frame = PlayerFrames.STAND;\n      } else if (this.state === PlayerStates.RUN) {\n        frame = PlayerFrames.RUN;\n      } else if (this.state === PlayerStates.JUMP) {\n        frame = PlayerFrames.JUMP;\n      }\n\n      return frame;\n    }\n  }, {\n    key: \"getSheetImage\",\n    value: function getSheetImage(sheet, x, y, width, height, direction) {\n      var key = [x, y, width, height, direction].join('_');\n\n      if (!this.imgCache[key]) {\n        this.bufferctx.clearRect(0, 0, this.buffer.width, this.buffer.height);\n        this.bufferctx.setTransform(1, 0, 0, 1, 0, 0);\n\n        if (direction === PlayerDirection.LEFT) {\n          this.bufferctx.translate(width, 0);\n          this.bufferctx.scale(-1, 1);\n        }\n\n        this.bufferctx.drawImage(this.sheet, x, y, width, height, 0, 0, width, height);\n        var image = new Image();\n        image.src = this.buffer.toDataURL();\n        this.imgCache[key] = image;\n      }\n\n      return this.imgCache[key];\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var frameInfo = this.getFrameInfo(); // get frame based on index\n\n      var frameX = frameInfo.offsetX + (frameInfo.width + SHEET_GAP) * this.frameIndex;\n      var sheetImage = this.getSheetImage(this.sheet, frameX, frameInfo.offsetY, frameInfo.width, frameInfo.height, this.direction);\n      this.context.drawImage(sheetImage, 0, 0);\n    }\n  }]);\n\n  return Player;\n}();\n\nexport default Player;","map":{"version":3,"sources":["/Users/keno/Projects/mario/src/Player.js"],"names":["PlayerStates","STAND","RUN","JUMP","PlayerFrames","height","width","offsetX","offsetY","count","PlayerDirection","LEFT","RIGHT","SHEET_GAP","Player","context","sheet","imgCache","state","direction","frameIndex","tickCount","ticksPerFrame","buffer","document","createElement","bufferctx","getContext","frameInfo","getFrameInfo","frame","x","y","key","join","clearRect","setTransform","translate","scale","drawImage","image","Image","src","toDataURL","frameX","sheetImage","getSheetImage"],"mappings":"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","sourcesContent":["\nconst PlayerStates = {\n  STAND: \"stand\",\n  RUN: \"run\",\n  JUMP: \"jump\",\n}\n\nconst PlayerFrames = {\n  STAND: {\n    height: 32,\n    width: 32,\n    offsetX: 160,\n    offsetY: 68,\n    count: 1,\n  },\n  RUN: {\n    height: 32,\n    width: 32,\n    offsetX: 194,\n    offsetY: 68,\n    count: 3,\n  },\n  JUMP: {\n    height: 32,\n    width: 32,\n    offsetX: 330,\n    offsetY: 68,\n    count: 1,\n  },\n}\n\nconst PlayerDirection = {\n  LEFT: 'left',\n  RIGHT: 'right',\n}\n\nconst SHEET_GAP = 2;\n\n\nclass Player {\n  constructor(context, sheet) {\n    this.context = context;\n    this.sheet = sheet;\n\n    this.state = PlayerStates.RUN;\n    this.direction = PlayerDirection.RIGHT;\n\n    this.frameIndex = 0;\n    this.tickCount = 0;\n    this.ticksPerFrame = 4;\n\n    this.buffer = document.createElement('canvas');\n    this.bufferctx = this.buffer.getContext('2d');\n\n    // TODO: generate all images in cache\n  }\n\n  setPlayerState(state) {\n    this.state = state;\n  }\n\n  update() {\n    const frameInfo = this.getFrameInfo();\n    this.tickCount++;\n    if (this.tickCount > this.ticksPerFrame) {\n      this.tickCount = 0;\n      this.frameIndex++;\n      this.frameIndex = (this.frameIndex < frameInfo.count)? this.frameIndex : 0; \n    }\n  }\n\n  getFrameInfo() {\n    let frame = PlayerFrames.STAND;\n    if (this.state === PlayerStates.STAND) { \n      frame = PlayerFrames.STAND;\n    } else if (this.state === PlayerStates.RUN) {\n      frame = PlayerFrames.RUN;\n    } else if (this.state === PlayerStates.JUMP) {\n      frame = PlayerFrames.JUMP;\n    }\n    return frame;\n  }\n\n  imgCache = {}\n  getSheetImage(sheet, x, y, width, height, direction) {\n    const key = [x, y, width, height, direction].join('_');\n\n    if (!this.imgCache[key]) {\n      this.bufferctx.clearRect(0, 0, this.buffer.width, this.buffer.height);\n      this.bufferctx.setTransform(1, 0, 0, 1, 0, 0);\n      if (direction === PlayerDirection.LEFT) {\n        this.bufferctx.translate(width, 0);\n        this.bufferctx.scale(-1, 1);\n      }\n      this.bufferctx.drawImage(this.sheet, x, y, width, height, 0, 0, width, height);\n\n      const image = new Image();\n      image.src = this.buffer.toDataURL();\n      this.imgCache[key] = image;\n    }\n    return this.imgCache[key];\n  }\n\n  draw() {\n    const frameInfo = this.getFrameInfo();\n    // get frame based on index\n    const frameX = frameInfo.offsetX + ((frameInfo.width + SHEET_GAP) * this.frameIndex);\n\n    const sheetImage = this.getSheetImage(this.sheet, frameX, frameInfo.offsetY,\n                                          frameInfo.width, frameInfo.height,\n                                          this.direction);\n    this.context.drawImage(sheetImage, 0, 0);\n  }\n}\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}