{"ast":null,"code":"import _classCallCheck from \"/Users/keno/Projects/mario/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/keno/Projects/mario/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport Player from './Player';\nimport Connection from './Connection';\nimport Block from './Block';\n\nvar Game =\n/*#__PURE__*/\nfunction () {\n  function Game(width, height, context) {\n    _classCallCheck(this, Game);\n\n    this.players = [];\n    this.blocks = [];\n    this.width = width;\n    this.height = height;\n    this.context = context; // create connection class\n\n    this.connection = new Connection();\n  }\n\n  _createClass(Game, [{\n    key: \"setResources\",\n    value: function setResources(resources) {\n      this.resources = resources;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      // make sure resources are loaded\n      Promise.all(Object.values(this.resources).map(function (img) {\n        return _this.checkImage(img.src);\n      })).then(function () {\n        return _this.start();\n      });\n    }\n  }, {\n    key: \"playerJoined\",\n    value: function playerJoined(name) {\n      var player = new Player(this.width, this.height, this.context, this.resources.mario, name);\n      this.players.push(player);\n      return player;\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this2 = this;\n\n      // create player\n      var playerName = new URLSearchParams(window.location.search).get('p') || \"default\";\n      this.player = this.playerJoined(playerName);\n      this.connection.connect(playerName);\n      this.connection.subscribe('players', function (playerActions) {\n        var nameCompare = function nameCompare(player) {\n          return function (e) {\n            return e.name === player.name;\n          };\n        }; // create players if necessary\n\n\n        playerActions.map(function (p) {\n          return p.name;\n        }).filter(function (a) {\n          return !_this2.players.find(function (p) {\n            return a === p.name;\n          });\n        }).map(function (p) {\n          return _this2.playerJoined(p);\n        }); // loop through all players if they should move\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = _this2.players[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var player = _step.value;\n            var playerAction = playerActions.find(nameCompare(player)); // skip player if no action sent\n\n            if (!playerAction) {\n              continue;\n            } // handle position\n\n\n            if (playerAction.position) {\n              var _playerAction$positio = playerAction.position,\n                  x = _playerAction$positio.x,\n                  y = _playerAction$positio.y;\n              player.setPlayerPosition(x, y);\n            } // handle direction\n\n\n            if (playerAction.direction) {\n              player.direction = playerAction.direction;\n            } // handle state\n\n\n            if (playerAction.state) {\n              player.state = playerAction.state;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      });\n      this.connection.subscribe('world', function (world) {\n        _this2.blocks = world.map(function (block) {\n          return new Block(_this2.width, _this2.height, _this2.context, _this2.resources.blocks, block.position, block.type, block.hit);\n        });\n      });\n\n      document.onkeydown = function (e) {\n        e = e || window.event;\n\n        if (e.keyCode === 38) {\n          _this2.connection.send(\"up\");\n        } else if (e.keyCode === 40) {\n          _this2.connection.send(\"down\");\n        } else if (e.keyCode === 37) {\n          _this2.connection.send(\"left\");\n        } else if (e.keyCode === 39) {\n          _this2.connection.send(\"right\");\n        }\n      };\n\n      this.gameLoop();\n    }\n  }, {\n    key: \"drawBG\",\n    value: function drawBG() {\n      this.context.fillStyle = \"#5D94FB\";\n      this.context.fillRect(0, 0, this.width, this.height);\n    } // main game loop -------------------------\n\n  }, {\n    key: \"gameLoop\",\n    value: function gameLoop() {\n      var _this3 = this;\n\n      window.requestAnimationFrame(function () {\n        return _this3.gameLoop();\n      });\n      this.drawBG();\n      this.blocks.map(function (b) {\n        return b.draw();\n      });\n      this.players.map(function (p) {\n        p.update();\n        p.draw();\n      });\n    } // UTILS ----------------------------------\n\n  }, {\n    key: \"checkImage\",\n    value: function checkImage(path) {\n      return new Promise(function (resolve) {\n        var img = new Image();\n\n        img.onload = function () {\n          return resolve({\n            path: path,\n            status: 'ok'\n          });\n        };\n\n        img.onerror = function () {\n          return resolve({\n            path: path,\n            status: 'error'\n          });\n        };\n\n        img.src = path;\n      });\n    }\n  }]);\n\n  return Game;\n}();\n\nexport default Game;","map":{"version":3,"sources":["/Users/keno/Projects/mario/client/src/Game.js"],"names":["Player","Connection","Block","Game","width","height","context","players","blocks","connection","resources","Promise","all","Object","values","map","img","checkImage","src","then","start","name","player","mario","push","playerName","URLSearchParams","window","location","search","get","playerJoined","connect","subscribe","playerActions","nameCompare","e","p","filter","a","find","playerAction","position","x","y","setPlayerPosition","direction","state","world","block","type","hit","document","onkeydown","event","keyCode","send","gameLoop","fillStyle","fillRect","requestAnimationFrame","drawBG","b","draw","update","path","resolve","Image","onload","status","onerror"],"mappings":"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","sourcesContent":["import Player from './Player';\nimport Connection from './Connection'\nimport Block from './Block'\n\n\nclass Game {\n  players = [];\n  blocks = [];\n\n  constructor(width, height, context) {\n    this.width = width;\n    this.height = height;\n    this.context = context;\n\n    // create connection class\n    this.connection = new Connection()\n  }\n\n  setResources(resources) {\n    this.resources = resources;\n  }\n\n  init() {\n    // make sure resources are loaded\n    Promise.all(Object.values(this.resources).map(img => this.checkImage(img.src)))\n                  .then(() => this.start());\n  }\n\n  playerJoined(name) {\n    const player = new Player(this.width, this.height, this.context, this.resources.mario, name);\n    this.players.push(player);\n    return player\n  }\n\n  start() {\n    // create player\n    const playerName = (new URLSearchParams(window.location.search)).get('p') || \"default\"\n    this.player = this.playerJoined(playerName);\n\n    this.connection.connect(playerName)\n    this.connection.subscribe('players', (playerActions) => {\n        const nameCompare = player => (e) => e.name === player.name\n\n        // create players if necessary\n        playerActions\n          .map(p => p.name)\n          .filter(a => !this.players.find(p => a === p.name))\n          .map(p => this.playerJoined(p))\n\n        // loop through all players if they should move\n        for (var player of this.players) {\n          const playerAction = playerActions.find(nameCompare(player));\n\n          // skip player if no action sent\n          if (!playerAction) {\n            continue;\n          }\n\n          // handle position\n          if (playerAction.position) {\n            const {x, y} = playerAction.position\n            player.setPlayerPosition(x, y)\n          }\n          // handle direction\n          if (playerAction.direction) {\n            player.direction = playerAction.direction\n          }\n          // handle state\n          if (playerAction.state) {\n            player.state = playerAction.state\n          }\n        }\n    })\n\n    this.connection.subscribe('world', (world) => {\n      this.blocks = world.map(block => {\n        return new Block(this.width, this.height, this.context, this.resources.blocks,\n                          block.position, block.type, block.hit);\n      })\n    })\n\n    document.onkeydown = (e) => {\n      e = e || window.event;\n      if (e.keyCode === 38) {\n         this.connection.send(\"up\")\n      } else if (e.keyCode === 40) {\n         this.connection.send(\"down\")\n      } else if (e.keyCode === 37) {\n         this.connection.send(\"left\")\n      } else if (e.keyCode === 39) {\n         this.connection.send(\"right\")\n      }\n    }\n\n    this.gameLoop();\n  }\n\n  drawBG() {\n    this.context.fillStyle = \"#5D94FB\";\n    this.context.fillRect(0, 0, this.width, this.height);\n  }\n\n  // main game loop -------------------------\n  gameLoop () {\n\n    window.requestAnimationFrame(() => this.gameLoop());\n\n    this.drawBG();\n    this.blocks.map(b => b.draw());\n    this.players.map(p => {\n      p.update();\n      p.draw();\n    })\n  }\n\n  // UTILS ----------------------------------\n  checkImage(path) {\n    return new Promise(resolve => {\n        const img = new Image();\n        img.onload = () => resolve({path, status: 'ok'});\n        img.onerror = () => resolve({path, status: 'error'});\n\n        img.src = path;\n    });\n  }\n\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}