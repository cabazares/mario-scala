{"ast":null,"code":"import _classCallCheck from \"/Users/keno/Projects/mario/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/keno/Projects/mario/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar PlayerStates = {\n  STAND: \"stand\",\n  RUN: \"run\",\n  JUMP: \"jump\"\n};\nvar PlayerFrames = {\n  STAND: {\n    height: 32,\n    width: 32,\n    offsetX: 160,\n    offsetY: 68,\n    count: 1\n  },\n  RUN: {\n    height: 32,\n    width: 32,\n    offsetX: 194,\n    offsetY: 68,\n    count: 3\n  },\n  JUMP: {\n    height: 32,\n    width: 32,\n    offsetX: 330,\n    offsetY: 68,\n    count: 1\n  }\n};\nvar SHEET_GAP = 2;\n\nvar Player =\n/*#__PURE__*/\nfunction () {\n  function Player(context, sheet) {\n    _classCallCheck(this, Player);\n\n    this.imgCache = {};\n    this.context = context;\n    this.sheet = sheet;\n    this.state = PlayerStates.JUMP;\n    this.frameIndex = 0;\n    this.tickCount = 0;\n    this.ticksPerFrame = 4;\n    this.buffer = document.createElement('canvas').getContext('2d');\n  }\n\n  _createClass(Player, [{\n    key: \"setPlayerState\",\n    value: function setPlayerState(state) {\n      this.state = state;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var frameInfo = this.getFrameInfo();\n      this.tickCount++;\n\n      if (this.tickCount > this.ticksPerFrame) {\n        this.tickCount = 0;\n        this.frameIndex++;\n        this.frameIndex = this.frameIndex < frameInfo.count ? this.frameIndex : 0;\n      }\n    }\n  }, {\n    key: \"getFrameInfo\",\n    value: function getFrameInfo() {\n      var frame = PlayerFrames.STAND;\n\n      if (this.state === PlayerStates.STAND) {\n        frame = PlayerFrames.STAND;\n      } else if (this.state === PlayerStates.RUN) {\n        frame = PlayerFrames.RUN;\n      } else if (this.state === PlayerStates.JUMP) {\n        frame = PlayerFrames.JUMP;\n      }\n\n      return frame;\n    }\n  }, {\n    key: \"getSheetImage\",\n    value: function getSheetImage(sheet, x, y, width, height, direction) {\n      canvasContext.translate(width, 0);\n      canvasContext.scale(-1, 1);\n      this.canvasContext.drawImage(image, 0, 0);\n      var image = new Image();\n      image.id = \"pic\";\n      image.src = canvas.toDataURL();\n      document.getElementById('image_for_crop').appendChild(image);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var frameInfo = this.getFrameInfo(); // get frame based on index\n\n      var frameX = frameInfo.offsetX + (frameInfo.width + SHEET_GAP) * this.frameIndex;\n      this.context.drawImage(this.sheet, frameX, frameInfo.offsetY, frameInfo.width, frameInfo.height, 0, 0, frameInfo.width, frameInfo.height);\n    }\n  }]);\n\n  return Player;\n}();\n\nexport default Player;","map":{"version":3,"sources":["/Users/keno/Projects/mario/src/Player.js"],"names":["PlayerStates","STAND","RUN","JUMP","PlayerFrames","height","width","offsetX","offsetY","count","SHEET_GAP","Player","context","sheet","imgCache","state","frameIndex","tickCount","ticksPerFrame","buffer","document","createElement","getContext","frameInfo","getFrameInfo","frame","x","y","direction","canvasContext","translate","scale","drawImage","image","Image","id","src","canvas","toDataURL","getElementById","appendChild","frameX"],"mappings":"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","sourcesContent":["\nconst PlayerStates = {\n  STAND: \"stand\",\n  RUN: \"run\",\n  JUMP: \"jump\",\n}\n\nconst PlayerFrames = {\n  STAND: {\n    height: 32,\n    width: 32,\n    offsetX: 160,\n    offsetY: 68,\n    count: 1,\n  },\n  RUN: {\n    height: 32,\n    width: 32,\n    offsetX: 194,\n    offsetY: 68,\n    count: 3,\n  },\n  JUMP: {\n    height: 32,\n    width: 32,\n    offsetX: 330,\n    offsetY: 68,\n    count: 1,\n  },\n}\n\nconst SHEET_GAP = 2;\n\nclass Player {\n  constructor(context, sheet) {\n    this.context = context;\n    this.sheet = sheet;\n\n    this.state = PlayerStates.JUMP;\n\n    this.frameIndex = 0;\n    this.tickCount = 0;\n    this.ticksPerFrame = 4;\n\n    this.buffer = document.createElement('canvas').getContext('2d');\n  }\n\n  setPlayerState(state) {\n    this.state = state;\n  }\n\n  update() {\n    const frameInfo = this.getFrameInfo();\n    this.tickCount++;\n    if (this.tickCount > this.ticksPerFrame) {\n      this.tickCount = 0;\n      this.frameIndex++;\n      this.frameIndex = (this.frameIndex < frameInfo.count)? this.frameIndex : 0; \n    }\n  }\n\n  getFrameInfo() {\n    let frame = PlayerFrames.STAND;\n    if (this.state === PlayerStates.STAND) { \n      frame = PlayerFrames.STAND;\n    } else if (this.state === PlayerStates.RUN) {\n      frame = PlayerFrames.RUN;\n    } else if (this.state === PlayerStates.JUMP) {\n      frame = PlayerFrames.JUMP;\n    }\n    return frame;\n  }\n\n  imgCache = {}\n  getSheetImage(sheet, x, y, width, height, direction) {\n\n    canvasContext.translate(width, 0);\n    canvasContext.scale(-1, 1);\n    this.canvasContext.drawImage(image, 0, 0);\n\n    var image = new Image();\n    image.id = \"pic\"\n    image.src = canvas.toDataURL();\n    document.getElementById('image_for_crop').appendChild(image);\n  }\n\n  draw() {\n    const frameInfo = this.getFrameInfo();\n    // get frame based on index\n    const frameX = frameInfo.offsetX + ((frameInfo.width + SHEET_GAP) * this.frameIndex);\n\n    this.context.drawImage(this.sheet,\n                           frameX, frameInfo.offsetY, frameInfo.width, frameInfo.height,\n                           0, 0, frameInfo.width, frameInfo.height);\n  }\n}\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}