{"ast":null,"code":"import _classCallCheck from \"/Users/keno/Projects/mario/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/keno/Projects/mario/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar PlayerStates = {\n  STAND: \"stand\",\n  RUN: \"run\",\n  JUMP: \"jump\"\n};\nvar PlayerFrames = {\n  STAND: {\n    height: 16,\n    width: 16,\n    offsetX: 80,\n    offsetY: 34,\n    count: 1\n  },\n  RUN: {\n    height: 16,\n    width: 16,\n    offsetX: 80,\n    offsetY: 34,\n    count: 1\n  }\n};\nvar SHEET_GAP = 1;\n\nvar Player =\n/*#__PURE__*/\nfunction () {\n  function Player(context, sheet) {\n    _classCallCheck(this, Player);\n\n    this.context = context;\n    this.sheet = sheet;\n    this.state = PlayerStates.RUN;\n    this.frameIndex = 0;\n    this.tickCount = 0;\n    this.ticksPerFrame = 0;\n  }\n\n  _createClass(Player, [{\n    key: \"setPlayerState\",\n    value: function setPlayerState(state) {\n      this.state = state;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var frameInfo = this.getFrameInfo();\n      this.tickCount++;\n\n      if (this.tickCount > this.ticksPerFrame) {\n        this.tickCount = 0;\n        this.frameIndex++;\n        this.frameIndex = this.frameIndex < this.frameInfo.count ? this.frameIndex : 0;\n      }\n    }\n  }, {\n    key: \"getFrameInfo\",\n    value: function getFrameInfo() {\n      var frame = PlayerFrames.STAND;\n\n      if (state === PlayerStates.STAND) {\n        frame = PlayerFrames.STAND;\n      } else if (state === PlayerStates.RUN) {\n        frame = PlayerFrames.RUN;\n      }\n\n      return frame;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var state = this.state;\n      this.context.drawImage(this.sheet, frame.offsetX, frame.offsetY, frame.width, frame.height, 0, 0, frame.width, frame.height);\n    }\n  }]);\n\n  return Player;\n}();\n\nexport default Player;","map":{"version":3,"sources":["/Users/keno/Projects/mario/src/Player.js"],"names":["PlayerStates","STAND","RUN","JUMP","PlayerFrames","height","width","offsetX","offsetY","count","SHEET_GAP","Player","context","sheet","state","frameIndex","tickCount","ticksPerFrame","frameInfo","getFrameInfo","frame","drawImage"],"mappings":";;AACA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,OADY;AAEnBC,EAAAA,GAAG,EAAE,KAFc;AAGnBC,EAAAA,IAAI,EAAE;AAHa,CAArB;AAMA,IAAMC,YAAY,GAAG;AACnBH,EAAAA,KAAK,EAAE;AACLI,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,KAAK,EAAE,EAFF;AAGLC,IAAAA,OAAO,EAAE,EAHJ;AAILC,IAAAA,OAAO,EAAE,EAJJ;AAKLC,IAAAA,KAAK,EAAE;AALF,GADY;AAQnBP,EAAAA,GAAG,EAAE;AACHG,IAAAA,MAAM,EAAE,EADL;AAEHC,IAAAA,KAAK,EAAE,EAFJ;AAGHC,IAAAA,OAAO,EAAE,EAHN;AAIHC,IAAAA,OAAO,EAAE,EAJN;AAKHC,IAAAA,KAAK,EAAE;AALJ;AARc,CAArB;AAiBA,IAAMC,SAAS,GAAG,CAAlB;;IAEMC,M;;;AACJ,kBAAYC,OAAZ,EAAqBC,KAArB,EAA4B;AAAA;;AAC1B,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKC,KAAL,GAAaA,KAAb;AAEA,SAAKC,KAAL,GAAad,YAAY,CAACE,GAA1B;AAEA,SAAKa,UAAL,GAAkB,CAAlB;AACA,SAAKC,SAAL,GAAiB,CAAjB;AACA,SAAKC,aAAL,GAAqB,CAArB;AACD;;;;mCAEcH,K,EAAO;AACpB,WAAKA,KAAL,GAAaA,KAAb;AACD;;;6BAEQ;AACP,UAAMI,SAAS,GAAG,KAAKC,YAAL,EAAlB;AACA,WAAKH,SAAL;;AACA,UAAI,KAAKA,SAAL,GAAiB,KAAKC,aAA1B,EAAyC;AACvC,aAAKD,SAAL,GAAiB,CAAjB;AACA,aAAKD,UAAL;AACA,aAAKA,UAAL,GAAmB,KAAKA,UAAL,GAAkB,KAAKG,SAAL,CAAeT,KAAlC,GAA0C,KAAKM,UAA/C,GAA4D,CAA9E;AACD;AACF;;;mCAEc;AACb,UAAIK,KAAK,GAAGhB,YAAY,CAACH,KAAzB;;AACA,UAAIa,KAAK,KAAKd,YAAY,CAACC,KAA3B,EAAkC;AAChCmB,QAAAA,KAAK,GAAGhB,YAAY,CAACH,KAArB;AACD,OAFD,MAEO,IAAIa,KAAK,KAAKd,YAAY,CAACE,GAA3B,EAAgC;AACrCkB,QAAAA,KAAK,GAAGhB,YAAY,CAACF,GAArB;AACD;;AACD,aAAOkB,KAAP;AACD;;;2BAEM;AACL,UAAMN,KAAK,GAAG,KAAKA,KAAnB;AACA,WAAKF,OAAL,CAAaS,SAAb,CAAuB,KAAKR,KAA5B,EACuBO,KAAK,CAACb,OAD7B,EACsCa,KAAK,CAACZ,OAD5C,EACqDY,KAAK,CAACd,KAD3D,EACkEc,KAAK,CAACf,MADxE,EAEuB,CAFvB,EAE0B,CAF1B,EAE6Be,KAAK,CAACd,KAFnC,EAE0Cc,KAAK,CAACf,MAFhD;AAGD;;;;;;AAGH,eAAeM,MAAf","sourcesContent":["\nconst PlayerStates = {\n  STAND: \"stand\",\n  RUN: \"run\",\n  JUMP: \"jump\",\n}\n\nconst PlayerFrames = {\n  STAND: {\n    height: 16,\n    width: 16,\n    offsetX: 80,\n    offsetY: 34,\n    count: 1,\n  },\n  RUN: {\n    height: 16,\n    width: 16,\n    offsetX: 80,\n    offsetY: 34,\n    count: 1,\n  },\n}\n\nconst SHEET_GAP = 1;\n\nclass Player {\n  constructor(context, sheet) {\n    this.context = context;\n    this.sheet = sheet;\n\n    this.state = PlayerStates.RUN;\n\n    this.frameIndex = 0;\n    this.tickCount = 0;\n    this.ticksPerFrame = 0;\n  }\n\n  setPlayerState(state) {\n    this.state = state;\n  }\n\n  update() {\n    const frameInfo = this.getFrameInfo();\n    this.tickCount++;\n    if (this.tickCount > this.ticksPerFrame) {\n      this.tickCount = 0;\n      this.frameIndex++;\n      this.frameIndex = (this.frameIndex < this.frameInfo.count)? this.frameIndex : 0; \n    }\n  }\n\n  getFrameInfo() {\n    let frame = PlayerFrames.STAND;\n    if (state === PlayerStates.STAND) { \n      frame = PlayerFrames.STAND;\n    } else if (state === PlayerStates.RUN) {\n      frame = PlayerFrames.RUN;\n    }\n    return frame;\n  }\n\n  draw() {\n    const state = this.state;\n    this.context.drawImage(this.sheet,\n                           frame.offsetX, frame.offsetY, frame.width, frame.height,\n                           0, 0, frame.width, frame.height);\n  }\n}\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}